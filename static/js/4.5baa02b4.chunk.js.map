{"version":3,"sources":["servises/api.js","servises/mapper.js","components/ErrorComponent/ErrorComponent.jsx","components/DataSection/DataSection.jsx","components/LinksGallery/LinksGallery.module.scss","components/ErrorComponent/ErrorComponent.module.scss","components/DataSection/DataSection.module.scss","components/LinkItem/LinkItem.jsx","components/LinksGallery/LinksGallery.jsx","components/MainMovieInformation/MainMovieInformation.module.scss","components/LinksSection/LinksSection.module.scss","components/ButtonComponent/ButtonComponent.jsx","components/MainMovieInformation/MainMovieInformation.jsx","servises/InformationLinksOption.js","components/LinksSection/LinksSection.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"names":["BASE_URL","API_KEY","process","trendingAPI","axios","get","searchAPI","searchValue","movieInformationAPI","movieId","castAPI","reviewsAPI","mapperMovies","movies","map","id","title","link","mapperMovieData","poster_path","release_date","popularity","overview","genres","posterPath","releaseYear","parseInt","Math","round","mapperCast","moviesId","name","profile_path","character","String","profilePath","mapperReviews","author","content","ErrorComponent","errorMessage","className","style","ErrorComponentTitle","DataSection","children","DataSectionTitle","defaultProps","module","exports","LinkItem","option","to","LinksGallery","moviesArr","key","ButtonComponent","handleButton","buttonTitle","type","onClick","MainMovieInformation","movieData","MainMovieInformationContainer","PosterImage","src","alt","InformationTextWrapper","MovieTitle","InformationText","GenresInformation","genresElem","InformationLinksOption","floor","random","LinksSection","LinksSectionTitle","Cast","lazy","Reviews","MovieDetailsPage","state","data","handleGoBack","props","history","goBack","this","match","params","then","setState","catch","error","message","fallback","path","routes","MOVIE_CAST","component","MOVIE_REVIEWS","Component"],"mappings":"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","file":"static/js/4.5baa02b4.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n// const API_KEY = '5375f5b660bc351c07bd65a13cdbbf31';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nexport const trendingAPI = () =>\n  axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n\nexport const searchAPI = searchValue =>\n  axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchValue}`);\n\nexport const movieInformationAPI = movieId =>\n  axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n\nexport const castAPI = movieId =>\n  axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n\nexport const reviewsAPI = movieId =>\n  axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n","export const mapperMovies = movies =>\n  movies.map(({ id, title }) => {\n    return { id, title, link: `/movies/${id}` };\n  });\n\nexport const mapperMovieData = ({\n  title,\n  poster_path,\n  release_date,\n  popularity,\n  overview,\n  genres,\n}) => {\n  return {\n    title,\n    posterPath: `https://image.tmdb.org/t/p/w500${poster_path}`,\n    releaseYear: parseInt(release_date),\n    popularity: Math.round(popularity),\n    overview,\n    genres,\n  };\n};\n\nexport const mapperCast = moviesId =>\n  moviesId.map(({ id, name, profile_path, character }) => {\n    return {\n      id: String(id),\n      name,\n      profilePath: profile_path\n        ? `https://image.tmdb.org/t/p/w500${profile_path}`\n        : null,\n      character,\n    };\n  });\n\nexport const mapperReviews = moviesId =>\n  moviesId.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id: String(id),\n    };\n  });\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './ErrorComponent.module.scss';\n\nconst ErrorComponent = ({ errorMessage }) => (\n  <h3 className={style.ErrorComponentTitle}>\n    Whoops, something went wrong: {errorMessage}\n  </h3>\n);\n\nErrorComponent.propTypes = {\n  errorMessage: PropTypes.string.isRequired,\n};\n\nexport default ErrorComponent;\n","/*\nДаний компонент перевіряє відповідь від сервера на наявність помилок.\nЯкщо під час запиту відбулась помилка - \nренедериться компонент з повідомленням про помилку.\nУ випадку успішного опрацювання запиту - \nрендириться дочірній компонент з інформацією від сервера.\n*/\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorComponent from '../ErrorComponent/ErrorComponent';\nimport style from './DataSection.module.scss';\n\nconst DataSection = ({ title, errorMessage, children }) => {\n  if (errorMessage) {\n    return (\n      <section>\n        {title && <h2 className={style.DataSectionTitle}>{title}</h2>}\n        <ErrorComponent errorMessage={errorMessage} />\n      </section>\n    );\n  }\n  return (\n    <section>\n      {title && <h2 className={style.DataSectionTitle}>{title}</h2>}\n      {children}\n    </section>\n  );\n};\n\nDataSection.defaultProps = {\n  title: '',\n  errorMessage: '',\n};\n\nDataSection.propTypes = {\n  title: PropTypes.string,\n  errorMessage: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default DataSection;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LinksGallery\":\"LinksGallery_LinksGallery__3PSc5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ErrorComponentTitle\":\"ErrorComponent_ErrorComponentTitle__OcNSV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DataSectionTitle\":\"DataSection_DataSectionTitle__2V8yI\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst LinkItem = ({ option }) => {\n  return <Link to={option.link}>{option.title}</Link>;\n};\n\nLinkItem.propTypes = {\n  option: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default LinkItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport LinkItem from '../LinkItem/LinkItem';\nimport style from './LinksGallery.module.scss';\n\nconst LinksGallery = ({ moviesArr }) => {\n  return (\n    <ul className={style.LinksGallery}>\n      {moviesArr.map(({ title, id, link }) => (\n        <li key={id}>\n          <LinkItem option={{ title, link }} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nLinksGallery.propTypes = {\n  moviesArr: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      link: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default LinksGallery;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainMovieInformationContainer\":\"MainMovieInformation_MainMovieInformationContainer__2hCFO\",\"PosterImage\":\"MainMovieInformation_PosterImage__2uIpo\",\"InformationTextWrapper\":\"MainMovieInformation_InformationTextWrapper__2dV7W\",\"MovieTitle\":\"MainMovieInformation_MovieTitle__3F7lu\",\"InformationText\":\"MainMovieInformation_InformationText__yZ9M7\",\"GenresInformation\":\"MainMovieInformation_GenresInformation__3tF6u MainMovieInformation_InformationText__yZ9M7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LinksSection\":\"LinksSection_LinksSection__C1rCA\",\"LinksSectionTitle\":\"LinksSection_LinksSectionTitle__zYayk\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ButtonComponent = ({ handleButton, buttonTitle }) => {\n  return (\n    <button type=\"button\" onClick={handleButton}>\n      {buttonTitle}\n    </button>\n  );\n};\n\nButtonComponent.propTypes = {\n  handleButton: PropTypes.func.isRequired,\n  buttonTitle: PropTypes.string.isRequired,\n};\n\nexport default ButtonComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './MainMovieInformation.module.scss';\n\nconst MainMovieInformation = ({ movieData }) => {\n  const {\n    title,\n    posterPath,\n    releaseYear,\n    popularity,\n    overview,\n    genres,\n  } = movieData;\n  return (\n    <section className={style.MainMovieInformationContainer}>\n      <img className={style.PosterImage} src={posterPath} alt={title} />\n      <div className={style.InformationTextWrapper}>\n        <h2 className={style.MovieTitle}>\n          {title} ({releaseYear})\n        </h2>\n        <p className={style.InformationText}>User Score: {popularity} %</p>\n\n        <div>\n          <h3>Overview</h3>\n          <p className={style.InformationText}>{overview}</p>\n        </div>\n\n        <div>\n          <h3>Genres</h3>\n          <p className={style.GenresInformation}>\n            {genres.map(genresElem => (\n              <span key={genresElem.id}>{genresElem.name}</span>\n            ))}\n          </p>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nMainMovieInformation.propTypes = {\n  movieData: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    posterPath: PropTypes.string.isRequired,\n    releaseYear: PropTypes.number.isRequired,\n    popularity: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      }).isRequired,\n    ).isRequired,\n  }).isRequired,\n};\n\nexport default MainMovieInformation;\n","/*\n  Функція, яка повертає масив об'єктів-налаштувань \n  для веб-посилань\n*/\nconst InformationLinksOption = movieId => {\n  return [\n    {\n      title: 'Cast',\n      link: `/movies/${movieId}/cast`,\n      id: Math.floor(Math.random() * 1000),\n    },\n    {\n      title: 'Reviews',\n      link: `/movies/${movieId}/reviews`,\n      id: Math.floor(Math.random() * 1000),\n    },\n  ];\n};\n\nexport default InformationLinksOption;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport LinksGallery from '../LinksGallery/LinksGallery';\nimport InformationLinksOption from '../../servises/InformationLinksOption';\nimport style from './LinksSection.module.scss';\n\nconst LinksSection = ({ title, movieId }) => {\n  return (\n    <section className={style.LinksSection}>\n      <h3 className={style.LinksSectionTitle}>{title}</h3>\n      <LinksGallery moviesArr={InformationLinksOption(movieId)} />\n    </section>\n  );\n};\n\nLinksSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  movieId: PropTypes.string.isRequired,\n};\nexport default LinksSection;\n","import React, { Component, lazy, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch } from 'react-router-dom';\nimport ButtonComponent from '../../components/ButtonComponent/ButtonComponent';\nimport MainMovieInformation from '../../components/MainMovieInformation/MainMovieInformation';\nimport DataSection from '../../components/DataSection/DataSection';\nimport LinksSection from '../../components/LinksSection/LinksSection';\nimport routes from '../../servises/routes';\nimport { movieInformationAPI } from '../../servises/api';\nimport { mapperMovieData } from '../../servises/mapper';\n\nconst Cast = lazy(() => import('../../containers/Cast/Cast'));\nconst Reviews = lazy(() => import('../../containers/Reviews/Reviews'));\n\nclass MovieDetailsPage extends Component {\n  static propTypes = {\n    history: PropTypes.shape({\n      goBack: PropTypes.func.isRequired,\n    }).isRequired,\n    match: PropTypes.shape({\n      params: PropTypes.shape({\n        movieId: PropTypes.string,\n      }).isRequired,\n    }).isRequired,\n  };\n\n  state = {\n    data: null,\n    errorMessage: '',\n  };\n\n  componentDidMount() {\n    const { match } = this.props;\n    const { movieId } = match.params;\n    movieInformationAPI(movieId)\n      .then(({ data }) => {\n        this.setState({\n          data: mapperMovieData(data),\n        });\n      })\n      .catch(error => {\n        this.setState({\n          errorMessage: error.message,\n        });\n      });\n  }\n\n  handleGoBack = () => {\n    const { history } = this.props;\n    history.goBack();\n  };\n\n  render() {\n    const { data, errorMessage } = this.state;\n    const { match } = this.props;\n    const { movieId } = match.params;\n    return (\n      <>\n        <ButtonComponent\n          handleButton={this.handleGoBack}\n          buttonTitle=\"&#8617; Go back\"\n        />\n        {(data || errorMessage) && (\n          <DataSection errorMessage={errorMessage}>\n            <MainMovieInformation movieData={data} />\n          </DataSection>\n        )}\n        <LinksSection title=\"Additional information\" movieId={movieId} />\n        <Suspense fallback={<div>Loading...</div>}>\n          <Switch>\n            <Route path={routes.MOVIE_CAST} component={Cast} />\n            <Route path={routes.MOVIE_REVIEWS} component={Reviews} />\n          </Switch>\n        </Suspense>\n      </>\n    );\n  }\n}\nexport default MovieDetailsPage;\n"],"sourceRoot":""}